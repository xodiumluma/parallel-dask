[build-system]
requires = ["setuptools>=62.6", "versioneer[toml]==0.29"]
build-backend = "setuptools.build_meta"

[project]
name = "dask"
description = "Parallel PyData with Task Scheduling"
maintainers = [{name = "Matthew Rocklin", email = "mrocklin@gmail.com"}]
license = {text = "BSD-3-Clause"}
keywords = ["task-scheduling parallel numpy pandas pydata"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Distributed Computing",
]
readme = "README.rst"
urls = {Homepage = "https://github.com/dask/dask"}
requires-python = ">=3.9"
dependencies = [
    # NOTE: `continuous_integration/test_imports.sh` tests these
    # Change the corresponding line if you change these
    "click >= 8.1",
    "cloudpickle >= 1.5.0",
    "fsspec >= 2021.09.0",
    "packaging >= 20.0",
    "partd >= 1.2.0",
    "pyyaml >= 5.3.1",
    "toolz >= 0.10.0",
    # these importlib.metadata bugs were fixed in 3.10.9 and 3.11.1
    # https://github.com/python/cpython/issues/99130
    # https://github.com/python/cpython/issues/98706
    "importlib_metadata >= 4.13.0; python_version < '3.12' ",
]
dynamic = ["version"]

[project.optional-dependencies]
# NOTE: `continuous_integration/test_imports.sh` tests these
# Change the corresponding line if you change these
array = ["numpy >= 1.21"]
# backwards compatibility
bag = []
dataframe = [
    "dask[array]",
    # NOTE: pandas>2 is underpinned by dask-expr; for pandas<2 install dask without using dataframe extra
    "pandas >= 1.3",
    "dask-expr >= 1.0, <1.1", # dask version is fixed by dask-expr
]
distributed = ["distributed == 2024.3.1"]
diagnostics = [
    "bokeh >= 2.4.2",
    "jinja2 >= 2.10.3",
]
# backwards compatibility
delayed = []
complete = [
    "dask[array,dataframe,distributed,diagnostics]",
    "pyarrow >= 7.0",
    # If minimal pyarrow version >14.0.1 then remove this
    # https://lists.apache.org/thread/yhy7tdfjf9hrl9vfrtzo8p2cyjq87v7n
    "pyarrow_hotfix",
    "lz4 >= 4.3.2",
]
test = [
    "pandas[test]",
    "pytest",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout",
    "pytest-xdist",
    "pre-commit",
]

[project.entry-points."dask.array.backends"]
cupy = "dask.array.cupy_entry_point:CupyBackendEntrypoint"

[project.scripts]
dask = "dask.__main__:main"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = [
    "LICENSE.txt",
    "dask/array/NUMPY_LICENSE.txt",
]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.package-data]
dask = ["py.typed"]

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DISTRIBUTED", "FIRSTPARTY", "LOCALFOLDER"]
profile = "black"
skip_gitignore = true
force_to_top = ["true"]
default_section = "THIRDPARTY"
known_first_party = ["dask"]
known_distributed = ["distributed"]
add_imports = ["from __future__ import annotations"]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "dask/_version.py"
versionfile_build = "dask/_version.py"
tag_prefix = ""
parentdir_prefix = "dask-"

[tool.pytest.ini_options]
markers = [
  "network: Test requires an internet connection",
  "slow: Skipped unless --runslow passed",
  "gpu: marks tests to be run on GPUs",
  "skip_with_pyarrow_strings: Skip marked tests when pyarrow string conversion turned on",
  "xfail_with_pyarrow_string: When pyarrow string conversion is turned on, marked tests are xfailed",
]
addopts = "-v -rsfE --durations=10 --color=yes --cov-config=pyproject.toml"
filterwarnings = [
  "error:::dask[.*]",
  "error:::pandas[.*]",
  "error:::numpy[.*]",
  "error:::distributed[.*]",
  # https://github.com/numpy/numpy/issues/20225
  'ignore:The distutils\.sysconfig module is deprecated; use sysconfig instead:DeprecationWarning:numpy',
  # Distributed creates a warning when a local IP address is detected (offline)
  'ignore:Cannot detect a non-local IP address:RuntimeWarning:distributed',
  # Ignore FutureWarning for change in behaviour of group_keys (nothing to do on this dask side)
  # https://pandas.pydata.org/docs/dev/whatsnew/v1.5.0.html#using-group-keys-with-transformers-in-groupby-apply
  "ignore:Not prepending group keys:FutureWarning",
  "ignore:.*:dask.tests.warning_aliases.RemovedIn20Warning",
  "ignore:When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas:FutureWarning",
  'ignore:Passing a BlockManager to DataFrame is deprecated and will raise in a future version. Use public APIs instead:DeprecationWarning', # see https://github.com/apache/arrow/issues/35081

]